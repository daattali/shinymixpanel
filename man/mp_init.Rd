% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mixpanel.R
\name{mp_init}
\alias{mp_init}
\title{Set up a Shiny app to use Mixpanel for event tracking}
\usage{
mp_init(
  token,
  userid = NULL,
  options = NULL,
  default_properties = NULL,
  default_properties_js = NULL,
  test_token = NULL,
  test_domains = list("127.0.0.1", "localhost")
)
}
\arguments{
\item{token}{The Mixpanel project token.}

\item{userid}{A user to identify with Mixpanel on the current page. If provided, this userid
will be associated with all event tracking calls.}

\item{options}{List of configuration options to pass to Mixpanel. A full list of supported
options is available in \href{https://developer.mixpanel.com/docs/javascript-full-api-reference#mixpanelset_config}{Mixpanel's documentation}.
See the examples below for sample usage.}

\item{default_properties}{List of properties to send with every event.}

\item{default_properties_js}{List of properties that need to be computed client-side (with JavaScript
in the user's browser) to send with every event. See the examples below for sample usage.}

\item{test_token}{A Mixpanel project token for a test project. Must be used together with \code{test_domains}.
See the section below on "Using a test Mixpanel project for testing/development".}

\item{test_domains}{List of domains where the \code{test_token} should be used. Must be used together
with \code{test_token}. See the section below on "Using a test Mixpanel project for testing/development".}
}
\description{
Call this function in a Shiny app's UI in order to initialize Mixpanel on the page. The only
parameter that is required is \code{token}. See the examples below for sample usage of the
other parameters.
}
\note{
Tracking can be temporarily disabled, for example while developing or testing, by setting
the \code{SHINYMIXPANEL_DISABLE} environment variable to \code{"1"}.
}
\section{Using a test Mixpanel project for testing/development}{

While developing or testing your Shiny app, you can use the \code{SHINYMIXPANEL_DISABLE} envvar
to disable Mixpanel tracking. However, sometimes you may want to still have tracking but send the
data to a different "test" project rather than the real production Mixpanel project. The {shinymixpanel}
package supports this usecase via the \code{test_token} and \code{test_domains} parameters.\cr\cr
If both of these parameters are provided, then if the Shiny app is in a domain listed in the
\code{test_domains} list, the data will be sent to the project specified by \code{test_token} instead.
Note that the domains in \code{test_domains} are assumed to be suffixes. This means that if you provide
\code{"example.com"} as a test domain, then any user on \code{example.com} or \code{test.example.com} will use
the test project.
}

\examples{
if (interactive()) {

}
}
